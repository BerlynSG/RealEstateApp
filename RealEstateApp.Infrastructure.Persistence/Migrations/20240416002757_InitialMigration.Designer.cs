// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealEstateApp.Infrastructure.Persistence.Contexts;

#nullable disable

namespace RealEstateApp.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240416002757_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RealEstateApp.Core.Domain.Entities.ImagenPropiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropiedadId");

                    b.ToTable("ImagenesPropiedad", (string)null);
                });

            modelBuilder.Entity("RealEstateApp.Core.Domain.Entities.Mejora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Mejoras", (string)null);
                });

            modelBuilder.Entity("RealEstateApp.Core.Domain.Entities.MejoraPropiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MejoraId")
                        .HasColumnType("int");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MejoraId");

                    b.HasIndex("PropiedadId");

                    b.ToTable("MejorasPropiedades", (string)null);
                });

            modelBuilder.Entity("RealEstateApp.Core.Domain.Entities.Propiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgenteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Baños")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Habitaciones")
                        .HasColumnType("int");

                    b.Property<double>("Tamaño")
                        .HasColumnType("float");

                    b.Property<int>("TipoPropiedadId")
                        .HasColumnType("int");

                    b.Property<int>("TipoVentaId")
                        .HasMaxLength(150)
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasMaxLength(150)
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TipoPropiedadId");

                    b.HasIndex("TipoVentaId");

                    b.ToTable("Propiedades", (string)null);
                });

            modelBuilder.Entity("RealEstateApp.Core.Domain.Entities.PropiedadFavorita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClienteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropiedadId");

                    b.ToTable("PropiedadesFavoritas", (string)null);
                });

            modelBuilder.Entity("RealEstateApp.Core.Domain.Entities.TipoPropiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("TiposPropiedad", (string)null);
                });

            modelBuilder.Entity("RealEstateApp.Core.Domain.Entities.TipoVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("TiposVenta", (string)null);
                });

            modelBuilder.Entity("RealEstateApp.Core.Domain.Entities.ImagenPropiedad", b =>
                {
                    b.HasOne("RealEstateApp.Core.Domain.Entities.Propiedad", "Propiedad")
                        .WithMany("Imagenes")
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("RealEstateApp.Core.Domain.Entities.MejoraPropiedad", b =>
                {
                    b.HasOne("RealEstateApp.Core.Domain.Entities.Mejora", "Mejora")
                        .WithMany("Propiedades")
                        .HasForeignKey("MejoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateApp.Core.Domain.Entities.Propiedad", "Propiedad")
                        .WithMany("Mejoras")
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mejora");

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("RealEstateApp.Core.Domain.Entities.Propiedad", b =>
                {
                    b.HasOne("RealEstateApp.Core.Domain.Entities.TipoPropiedad", "TipoPropiedad")
                        .WithMany("Propiedades")
                        .HasForeignKey("TipoPropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateApp.Core.Domain.Entities.TipoVenta", "TipoVenta")
                        .WithMany("Propiedades")
                        .HasForeignKey("TipoVentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoPropiedad");

                    b.Navigation("TipoVenta");
                });

            modelBuilder.Entity("RealEstateApp.Core.Domain.Entities.PropiedadFavorita", b =>
                {
                    b.HasOne("RealEstateApp.Core.Domain.Entities.Propiedad", "Propiedad")
                        .WithMany("Favoritos")
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("RealEstateApp.Core.Domain.Entities.Mejora", b =>
                {
                    b.Navigation("Propiedades");
                });

            modelBuilder.Entity("RealEstateApp.Core.Domain.Entities.Propiedad", b =>
                {
                    b.Navigation("Favoritos");

                    b.Navigation("Imagenes");

                    b.Navigation("Mejoras");
                });

            modelBuilder.Entity("RealEstateApp.Core.Domain.Entities.TipoPropiedad", b =>
                {
                    b.Navigation("Propiedades");
                });

            modelBuilder.Entity("RealEstateApp.Core.Domain.Entities.TipoVenta", b =>
                {
                    b.Navigation("Propiedades");
                });
#pragma warning restore 612, 618
        }
    }
}
